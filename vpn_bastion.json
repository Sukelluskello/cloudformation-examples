{
  "Description": "Bastion stack",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "ElasticIP": {
      "Description": "Elastic IP for bastion",
      "Type": "String",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
      "ConstraintDescription": "must be the full elastic ip"
    },    
    "ImageId": {
      "Description": "AMI ID of the API Lists",
      "Type": "AWS::EC2::Image::Id"
    },
    "InstanceType": {
      "Description": "EC2 instance type",
      "Type": "String",
      "Default": "t2.nano",
      "AllowedValues": [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "m1.small", "m1.medium", "m1.large",
        "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge",
        "m3.2xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge",
        "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge",
        "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge",
        "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge",
        "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge" ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "S3VpnKeysBucketName": {
      "Description": "Name of S3 Secrets Bucket",
      "Type": "String"
    },
    "SubnetPublicA": {
      "Description": "ID of the Public A Subnet",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "SubnetPublicB": {
      "Description": "ID of the Public B Subnet",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "SubnetPublicC": {
      "Description": "ID of the Public C Subnet",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "Vpc": {
      "Description": "ID of the VPC",
      "Type": "AWS::EC2::VPC::Id"
    },
    "VpnCidr": {
      "Description": "VPN Cidr Block",
      "Type": "String"
    }
  },
  "Resources": {
    "BastionSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable access to Bastion",
        "VpcId": { "Ref": "Vpc" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "1194",
            "ToPort": "1194",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "BastionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": {
              "Service": [ "ec2.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          } ]
        },
        "Path": "/"
      }
    },
    "BastionAccessPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "BastionAccessPolicy",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "ec2:AssociateAddress",
                "ec2:Describe*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:Get*"
              ],
              "Effect": "Allow",
              "Resource": [
                { "Fn::Join": [ "", [
                    "arn:aws:s3:::",
                    { "Ref": "S3VpnKeysBucketName" }
                ] ] },
                { "Fn::Join": [ "", [
                    "arn:aws:s3:::",
                    { "Ref": "S3VpnKeysBucketName" },
                    "/*"
                ] ] }
              ]
            }
          ]
        },
        "Roles": [
          { "Ref": "BastionRole" }
        ]
      }
    },
    "BastionInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          { "Ref": "BastionRole" }
        ]
      }
    },
    "BastionLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": "true",
        "KeyName": { "Ref": "KeyName" },
        "IamInstanceProfile": { "Ref": "BastionInstanceProfile" },
        "ImageId": { "Ref": "ImageId" },
        "InstanceMonitoring": false,
        "InstanceType": { "Ref": "InstanceType" },
        "SecurityGroups": [
          { "Ref": "BastionSG" }
        ],
        "UserData": { "Fn::Base64": { "Fn::Join": [ "", [
          "#!/bin/bash\n",
          "apt-get update\n",
          "apt-get install -y curl openvpn python-pip\n",
          "pip install awscli\n",
          "mkdir -p /etc/openvpn/keys\n",
          "aws s3 cp s3://",
          {
            "Ref":"S3VpnKeysBucketName"
          },
          " /etc/openvpn/keys --recursive --include \"ca.crt\" --include \"server.crt\" --include \"server.key\" --include \"dh2048.pem\"\n",
          "chmod -R 0600 /etc/openvpn/keys\n",
          "aws s3 cp s3://",
          {
            "Ref":"S3VpnKeysBucketName"
          },
          "/server.conf /etc/openvpn\n",
          "iptables -t nat -A POSTROUTING -s ",
          {
            "Ref":"VpnCidr"
          },
          " -o eth0 -j MASQUERADE\n",
          "aws ec2 associate-address --region ",
          {
            "Ref":"AWS::Region"
          },
          " --instance-id `curl http://169.254.169.254/latest/meta-data/instance-id` --public-ip ",
          {
            "Ref":"ElasticIP"
          },
          "\n",
          "systemctl daemon-reload\n",
          "systemctl start openvpn@server"
        ] ] } }
      }
    },
    "BastionGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": [ "eu-west-1a", "eu-west-1b", "eu-west-1c" ],
        "DesiredCapacity": "1",
        "LaunchConfigurationName": { "Ref": "BastionLaunchConfig" },
        "MaxSize": "2",
        "MinSize": "1",
        "VPCZoneIdentifier": [ { "Ref": "SubnetPublicA" }, { "Ref": "SubnetPublicB" }, { "Ref": "SubnetPublicC" } ]
      }
    }
  }
}